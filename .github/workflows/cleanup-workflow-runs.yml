name: Cleanup Workflow Runs

on:
  workflow_dispatch:
    inputs:
      clean_success:
        description: '是否清除成功记录'
        required: false
        default: false
        type: boolean
      keep_latest:
        description: '保留最近N条记录（默认0）'
        required: false
        default: 0
        type: number

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: 安装 GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh -y

      - name: 清理 Workflow Runs
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN != '' && secrets.PAT_TOKEN || github.token }}
          CLEAN_SUCCESS: ${{ github.event.inputs.clean_success }}
          KEEP_LATEST: ${{ github.event.inputs.keep_latest }}
        run: |
          info()   { echo -e "\033[1;34m[INFO]\033[0m $*"; }
          warn()   { echo -e "\033[1;33m[WARN]\033[0m $*"; }
          error()  { echo -e "\033[1;31m[ERROR]\033[0m $*"; }

          info "Workflow Runs Cleanup Started"
          info "GH_TOKEN 使用: $([ -n "${GH_TOKEN}" ] && echo '自定义 PAT_TOKEN' || echo '默认 github.token')"
          info "参数: clean_success=${CLEAN_SUCCESS} keep_latest=${KEEP_LATEST}"

          REPO="${{ github.repository }}"
          info "当前仓库：$REPO"

          # 获取所有 workflow IDs+name
          mapfile -t workflow_lines < <(gh workflow list --repo "$REPO" --json id,name -q '.[] | "\(.id):\(.name)"')
          if [ "${#workflow_lines[@]}" -eq 0 ]; then
            warn "没有检测到 workflow，终止"
            exit 0
          fi

          info "发现 ${#workflow_lines[@]} 个 workflow"
          for workflow_line in "${workflow_lines[@]}"; do
            wf="${workflow_line%%:*}"
            wf_name="${workflow_line#*:}"
            info "处理 workflow: $wf_name ($wf)"

            # 获取所有已完成的 runs（包括 success, failure, cancelled, timed_out 等），限制最多 1000 条
            mapfile -t run_lines < <(gh run list --repo "$REPO" --workflow "$wf" --status completed --limit 1000 --json databaseId,conclusion,createdAt,headBranch -q '.[] | "\(.databaseId):\(.conclusion):\(.createdAt):\(.headBranch)"')
            total_runs="${#run_lines[@]}"
            info "发现 $total_runs 条 completed 记录"

            count=0
            for ((i=total_runs-1; i>=0; i--)); do
              IFS=: read -r run_id conclusion created branch <<<"${run_lines[i]}"
              count=$((count+1))
              if [ "$count" -le "$KEEP_LATEST" ]; then
                info "保留第 $count 条记录 run_id=$run_id branch=$branch created=$created 结论=$conclusion"
                continue
              fi

              # 是否清理成功 run
              if [ "$CLEAN_SUCCESS" = "false" ] && [ "$conclusion" = "success" ]; then
                info "跳过成功 run: run_id=$run_id"
                continue
              fi

              info "尝试删除: run_id=$run_id branch=$branch created=$created 结论=$conclusion"
              if gh run delete "$run_id" --repo "$REPO"; then
                info "已删除 run $run_id"
              else
                error "删除 run $run_id 失败"
              fi
            done
          done

          info "Workflow Runs Cleanup Finished"
