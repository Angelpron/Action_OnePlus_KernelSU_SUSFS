name: Auto-update CPU/FEIL options

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-options:
    runs-on: ubuntu-latest

    env:
      WF_FILE: ".github/workflows/Build-SukiSU-Ultra.yml"
      UPSTREAM_REPO: "OnePlusOSS/kernel_manifest"

    steps:
      - name: Checkout this repo with PAT
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Install jq and yq
        shell: bash
        run: |
          set -Eeuo pipefail
          sudo apt-get update -y
          sudo apt-get install -y jq
          sudo curl -fsSL -o /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Fetch upstream branches → CPU list
        shell: bash
        run: |
          set -Eeuo pipefail
          git ls-remote --heads "https://github.com/${UPSTREAM_REPO}.git" \
            | awk '{print $2}' | sed 's#refs/heads/##' > branches_full.txt
          awk -F'/' '{print $NF}' branches_full.txt \
            | awk '/^sm[0-9]+$/' | sort -u > cpu_list.txt

      - name: Collect .xml basenames → FEIL list
        shell: bash
        run: |
          set -Eeuo pipefail
          : > xml_names.txt
          while read -r full_branch; do
            ref_enc="${full_branch//\//%2F}"
            api="https://api.github.com/repos/${UPSTREAM_REPO}/git/trees/${ref_enc}?recursive=1"
            resp="$(curl -sS \
              -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              "$api" || true)"
            if echo "$resp" | jq -e '.tree' >/dev/null 2>&1; then
              echo "$resp" \
                | jq -r '.tree[]
                    | select(.type=="blob" and (.path|endswith(".xml")))
                    | .path' \
                | sed -E 's#.*/##;s/\.xml$//' \
                >> xml_names.txt
            fi
            sleep 0.2
          done < branches_full.txt
          sort -u xml_names.txt -o xml_names.txt

      - name: Update CPU.options
        shell: bash
        run: |
          set -Eeuo pipefail
          if [ -s cpu_list.txt ]; then
            yq -i '.on.workflow_dispatch.inputs.CPU.options = []' "$WF_FILE"
            while read -r soc; do
              yq -i ".on.workflow_dispatch.inputs.CPU.options += [\"$soc\"]" "$WF_FILE"
            done < cpu_list.txt
          fi

      - name: Update FEIL.options
        shell: bash
        run: |
          set -Eeuo pipefail
          if [ -s xml_names.txt ]; then
            yq -i '.on.workflow_dispatch.inputs.FEIL.options = []' "$WF_FILE"
            while read -r name; do
              yq -i ".on.workflow_dispatch.inputs.FEIL.options += [\"$name\"]" "$WF_FILE"
            done < xml_names.txt
          fi

      - name: Ensure defaults are valid
        shell: bash
        run: |
          set -Eeuo pipefail
          if [ -s cpu_list.txt ]; then
            cpu_default="$(yq -r '.on.workflow_dispatch.inputs.CPU.default // ""' "$WF_FILE")"
            if [ -n "$cpu_default" ] && ! grep -qx "$cpu_default" cpu_list.txt; then
              new_def="$(head -n1 cpu_list.txt)"
              [ -n "$new_def" ] && yq -i ".on.workflow_dispatch.inputs.CPU.default = \"$new_def\"" "$WF_FILE"
            fi
          fi
          if [ -s xml_names.txt ]; then
            feil_default="$(yq -r '.on.workflow_dispatch.inputs.FEIL.default // ""' "$WF_FILE")"
            if [ -n "$feil_default" ] && ! grep -qx "$feil_default" xml_names.txt; then
              new_def="$(head -n1 xml_names.txt)"
              [ -n "$new_def" ] && yq -i ".on.workflow_dispatch.inputs.FEIL.default = \"$new_def\"" "$WF_FILE"
            fi
          fi

      - name: Commit and push if changed
        shell: bash
        run: |
          set -Eeuo pipefail
          if git status --porcelain | grep -q .; then
            git config user.name "FurLC"
            git config user.email "qq441791056@163.com"
            git add "$WF_FILE"
            git commit -m "chore: auto-update CPU and FEIL options"
            # Push using PAT_TOKEN
            git remote set-url origin https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi
