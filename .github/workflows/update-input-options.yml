name: Auto-update CPU/FEIL options

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-options:
    runs-on: ubuntu-latest
    env:
      WF_FILE: ".github/workflows/Build-SukiSU-Ultra.yml"
      UPSTREAM_REPO: "OnePlusOSS/kernel_manifest"

    steps:
      - name: Checkout this repo with PAT
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Install jq and yq
        shell: bash
        run: |
          set -Eeuo pipefail
          sudo apt-get update -y
          sudo apt-get install -y jq
          sudo curl -fsSL -o /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      # ← 保留下面这两段不被 yq 或 sed 操作误删 ↓

      - name: Setup SukiSU Ultra
        shell: bash
        run: |
          # 设置SukiSU Ultra #
          mkdir -p kernel_workspace/kernel_platform
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/susfs-main/kernel/setup.sh" \
            | bash -s susfs-main

          cd KernelSU
          curl -L -o sukisu_setup.bin https://example.com/path/to/sukisu_setup.bin
          chmod +x sukisu_setup.bin

          if [ ! -f "kernel/Makefile" ]; then
            echo "Error：缺少kernel/Makefile"
            ls -la
            exit 1
          fi

          ./sukisu_setup.bin
          rm -rf ./sukisu_setup.bin
          echo "SukiSU Ultra配置完成"

      - name: Initialize kernel repository
        shell: bash
        run: |
          # 初始化内核仓库 #
          mkdir -p kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git \
            -b refs/heads/oneplus/${{ github.event.inputs.CPU }} \
            -m ${{ github.event.inputs.FEIL }}.xml --depth=1
          repo sync -c -j$(nproc --all) --no-tags --no-clone-bundle --force-sync

          echo "Kernel version:-${{ github.event.inputs.ANDROID_VERSION }}-furlc"
          rm kernel_platform/common/android/abi_gki_protected_exports_* 2>/dev/null || true
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* 2>/dev/null || true
          # 去除 -dirty 标记并追加版本后缀
          for d in common msm-kernel external/dtc; do
            base=kernel_platform/$d/scripts/setlocalversion
            sed -i 's/ -dirty//g' "$base"
            sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' "$base"
            sed -i '$s|echo "\$res"|echo "-${{ github.event.inputs.ANDROID_VERSION }}-furlc"|' "$base"
          done

      # ← CPU/FEIL options 更新段落，用 in-place 替换，确保不 touch 上面内容 ↓

      - name: Generate CPU & FEIL lists
        shell: bash
        run: |
          set -Eeuo pipefail
          git ls-remote --heads "https://github.com/${UPSTREAM_REPO}.git" \
            | sed 's#refs/heads/##' > branches.txt
          grep -E '^.*/sm[0-9]+' branches.txt | sed 's#.*/##' | sort -u > cpu_list.txt

          : > xml_names.txt
          while IFS= read -r branch; do
            [[ -z "$branch" ]] && continue
            ref_enc=${branch//\//%2F}
            [[ -z "$ref_enc" ]] && continue
            api="https://api.github.com/repos/${UPSTREAM_REPO}/git/trees/${ref_enc}?recursive=1"
            resp=$(curl -sS -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
                       -H "Accept: application/vnd.github+json" "$api" || true)
            paths=$(jq -r '(.tree//[])[] | select(.type=="blob" and (.path|strings|endswith(".xml"))) | .path' <<<"$resp")
            if [[ -n "$paths" ]]; then
              while IFS= read -r p; do
                echo "$(basename "$p" .xml)" >> xml_names.txt
              done <<<"$paths"
            fi
            sleep 0.2
          done < branches.txt
          sort -u xml_names.txt -o xml_names.txt

      - name: Update CPU.options & FEIL.options
        shell: bash
        run: |
          set -Eeuo pipefail
          
          # Create temporary files for replacement content
          temp_cpu=$(mktemp)
          temp_feil=$(mktemp)
          
          # Generate CPU options replacement
          echo "        options:" > "$temp_cpu"
          if [ -s cpu_list.txt ]; then
            while IFS= read -r soc; do
              echo "          - $soc" >> "$temp_cpu"
            done < cpu_list.txt
          fi
          
          # Generate FEIL options replacement
          echo "        options:" > "$temp_feil"
          if [ -s xml_names.txt ]; then
            while IFS= read -r name; do
              echo "          - $name" >> "$temp_feil"
            done < xml_names.txt
          fi
          
          # Replace CPU options between markers using sed with temporary file
          sed -i '/# CPU_OPTIONS_START/,/# CPU_OPTIONS_END/{
            /# CPU_OPTIONS_START/{
              r '"$temp_cpu"'
              b
            }
            /# CPU_OPTIONS_END/!d
          }' "$WF_FILE"
          
          # Replace FEIL options between markers using sed with temporary file
          sed -i '/# FEIL_OPTIONS_START/,/# FEIL_OPTIONS_END/{
            /# FEIL_OPTIONS_START/{
              r '"$temp_feil"'
              b
            }
            /# FEIL_OPTIONS_END/!d
          }' "$WF_FILE"
          
          # Clean up temporary files
          rm -f "$temp_cpu" "$temp_feil"

      - name: Ensure defaults are valid
        shell: bash
        run: |
          set -Eeuo pipefail
          # Use yq only for reading and updating defaults, not for rewriting options
          def_cpu=$(yq eval -r '.on.workflow_dispatch.inputs.CPU.default // ""' "$WF_FILE")
          grep -qxF "$def_cpu" cpu_list.txt || \
            yq eval -i ".on.workflow_dispatch.inputs.CPU.default = \"$(head -n1 cpu_list.txt)\"" "$WF_FILE"
          def_feil=$(yq eval -r '.on.workflow_dispatch.inputs.FEIL.default // ""' "$WF_FILE")
          grep -qxF "$def_feil" xml_names.txt || \
            yq eval -i ".on.workflow_dispatch.inputs.FEIL.default = \"$(head -n1 xml_names.txt)\"" "$WF_FILE"

      - name: Commit and push if changed
        shell: bash
        run: |
          set -Eeuo pipefail
          git diff --quiet || {
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add "$WF_FILE"
            git commit -m "chore: auto-update CPU and FEIL options"
            git remote set-url origin https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}
            git push origin HEAD:main
          }
