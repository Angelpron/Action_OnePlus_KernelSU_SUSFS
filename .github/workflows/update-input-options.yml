name: Auto-update CPU/FEIL options

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-options:
    runs-on: ubuntu-latest
    env:
      UPSTREAM_REPO: OnePlusOSS/kernel_manifest
      WORKFLOW_FILE: .github/workflows/Build-SukiSU-Ultra.yml
      GH_PAT: ${{ secrets.PAT_TOKEN }}    # 从仓库 Secrets 中读取

    steps:
      - name: Checkout repository with PAT
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Install jq & yq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl
          curl -fsSL -o /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Fetch upstream branches → CPU list
        shell: bash
        run: |
          set -Eeuo pipefail
          git ls-remote --heads https://github.com/${UPSTREAM_REPO}.git \
            | awk '{print $2}' | sed 's#refs/heads/##' \
            | awk -F/ '{print $NF}' | grep -E '^sm[0-9]+' | sort -u > cpu_list.txt

      - name: Collect .xml basenames → FEIL list
        shell: bash
        run: |
          set -Eeuo pipefail
          echo -n > xml_names.txt
          # NOTE: read from branches_full.txt (all branches), not from cpu_list.txt
          while read -r branch; do
            ref_enc=${branch//\//%2F}
            api="https://api.github.com/repos/${UPSTREAM_REPO}/git/trees/${ref_enc}?recursive=1"
            resp=$(curl -sS -H "Accept: application/vnd.github+json" "$api" || true)
            if echo "$resp" | jq -e '.tree' >/dev/null; then
              echo "$resp" \
                | jq -r '.tree[]
                    | select(.type=="blob" and (.path|endswith(".xml")))
                    | .path' \
                | sed -E 's#.*/##;s/\.xml$//' \
                >> xml_names.txt
            fi
            sleep 0.2
          done < branches_full.txt
          sort -u xml_names.txt -o xml_names.txt

      - name: Patch workflow_dispatch inputs
        shell: bash
        run: |
          set -Eeuo pipefail
          # CPU options
          if [ -s cpu_list.txt ]; then
            yq -i '.on.workflow_dispatch.inputs.CPU.options = []' "${WORKFLOW_FILE}"
            while read -r soc; do
              yq -i ".on.workflow_dispatch.inputs.CPU.options += [\"$soc\"]" "${WORKFLOW_FILE}"
            done < cpu_list.txt
          fi
          # FEIL options
          if [ -s xml_names.txt ]; then
            yq -i '.on.workflow_dispatch.inputs.FEIL.options = []' "${WORKFLOW_FILE}"
            while read -r name; do
              yq -i ".on.workflow_dispatch.inputs.FEIL.options += [\"$name\"]" "${WORKFLOW_FILE}"
            done < xml_names.txt
          fi

      - name: Ensure defaults remain valid
        shell: bash
        run: |
          set -Eeuo pipefail
          def_cpu=$(yq -r '.on.workflow_dispatch.inputs.CPU.default // ""' "${WORKFLOW_FILE}")
          grep -qxF "$def_cpu" cpu_list.txt || \
            yq -i ".on.workflow_dispatch.inputs.CPU.default = \"$(head -n1 cpu_list.txt)\"" "${WORKFLOW_FILE}"
          def_feil=$(yq -r '.on.workflow_dispatch.inputs.FEIL.default // ""' "${WORKFLOW_FILE}")
          grep -qxF "$def_feil" xml_names.txt || \
            yq -i ".on.workflow_dispatch.inputs.FEIL.default = \"$(head -n1 xml_names.txt)\"" "${WORKFLOW_FILE}"

      - name: Commit & push changes back to main
        shell: bash
        run: |
          set -Eeuo pipefail
          # 配置提交者信息
          git config user.name "FurLC"
          git config user.email "qq441791056@163.com"
          # 仅在有改动时提交
          git add "${WORKFLOW_FILE}"
          git diff --cached --quiet || git commit -m "chore: auto-update CPU and FEIL options"
          # 使用 PAT 绕过 GITHUB_TOKEN 写入 workflow 的限制
          git remote set-url origin https://${GH_PAT}@github.com/${{ github.repository }}
          git push origin HEAD:main
