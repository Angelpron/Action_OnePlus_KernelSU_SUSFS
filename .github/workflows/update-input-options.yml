name: Auto-update CPU/FEIL options

on:
  schedule:
    - cron: "12 3 * * *"
  workflow_dispatch:

permissions:
  contents: write
  workflows: write

jobs:
  update-options:
    runs-on: ubuntu-latest
    env:
      UPSTREAM_REPO: OnePlusOSS/kernel_manifest
      WORKFLOW_FILE: .github/workflows/Build-SukiSU-Ultra.yml

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl
          curl -fsSL -o /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Fetch upstream branches → CPU list
        shell: bash
        run: |
          set -Eeuo pipefail
          git ls-remote --heads https://github.com/${UPSTREAM_REPO}.git \
            | awk '{print $2}' | sed 's#refs/heads/##' > branches_full.txt
          awk -F/ '{print $NF}' branches_full.txt \
            | grep -E '^sm[0-9]+' | sort -u > cpu_list.txt

      - name: Collect .xml basenames → FEIL list
        shell: bash
        run: |
          set -Eeuo pipefail
          echo -n > xml_names.txt
          while read -r branch; do
            ref_enc=${branch//\//%2F}
            api="https://api.github.com/repos/${UPSTREAM_REPO}/git/trees/${ref_enc}?recursive=1"
            resp=$(curl -sS -H "Accept: application/vnd.github+json" "$api" || true)
            if echo "$resp" | jq -e '.tree' >/dev/null; then
              echo "$resp" \
                | jq -r '.tree[]
                    | select(.type=="blob" and (.path|endswith(".xml")))
                    | .path' \
                | sed -E 's#.*/##;s/\.xml$//' \
                >> xml_names.txt
            fi
            sleep 0.2
          done < branches_full.txt
          sort -u xml_names.txt -o xml_names.txt

      - name: Update CPU.options
        shell: bash
        run: |
          set -Eeuo pipefail
          if [ -s cpu_list.txt ]; then
            yq -i '.on.workflow_dispatch.inputs.CPU.options = []' "${WORKFLOW_FILE}"
            while read -r soc; do
              yq -i ".on.workflow_dispatch.inputs.CPU.options += [\"$soc\"]" "${WORKFLOW_FILE}"
            done < cpu_list.txt
          fi

      - name: Update FEIL.options
        shell: bash
        run: |
          set -Eeuo pipefail
          if [ -s xml_names.txt ]; then
            yq -i '.on.workflow_dispatch.inputs.FEIL.options = []' "${WORKFLOW_FILE}"
            while read -r name; do
              yq -i ".on.workflow_dispatch.inputs.FEIL.options += [\"$name\"]" "${WORKFLOW_FILE}"
            done < xml_names.txt
          fi

      - name: Ensure defaults remain valid
        shell: bash
        run: |
          set -Eeuo pipefail
          if grep -qxF "$(yq -r '.on.workflow_dispatch.inputs.CPU.default' "${WORKFLOW_FILE}")" cpu_list.txt; then
            : # CPU default OK
          else
            yq -i ".on.workflow_dispatch.inputs.CPU.default = \"$(head -n1 cpu_list.txt)\"" "${WORKFLOW_FILE}"
          fi
          if grep -qxF "$(yq -r '.on.workflow_dispatch.inputs.FEIL.default' "${WORKFLOW_FILE}")" xml_names.txt; then
            : # FEIL default OK
          else
            yq -i ".on.workflow_dispatch.inputs.FEIL.default = \"$(head -n1 xml_names.txt)\"" "${WORKFLOW_FILE}"
          fi

      - name: Create pull request with updates
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: auto-update CPU and FEIL options"
          branch: update-options-${{ github.run_id }}
          title: "chore: auto-update CPU and FEIL options from ${UPSTREAM_REPO}"
          labels: automated
          paths: .github/workflows/Build-SukiSU-Ultra.yml
